{"version":3,"sources":["components/header/Header.js","utils/NewDate.js","forms/registration/state.js","forms/registration/components/PersonalInfo.js","forms/registration/components/MedicalHistory.js","forms/registration/components/MedicalHistory2.js","forms/registration/components/Allergies.js","forms/registration/components/Medications.js","forms/registration/components/Comments.js","forms/registration/index.js","forms/covid/state.js","forms/covid/components/Risk.js","forms/covid/components/Paragrapgh.js","forms/covid/components/Section1.js","forms/covid/components/Section2.js","forms/covid/components/Section3.js","forms/covid/index.js","forms/index.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js","assets/landings-logo.svg"],"names":["Header","className","src","Logo","alt","NewDate","dateObj","Date","getMonth","getDate","getFullYear","date","name","dob","age","healthcard","effectivedate","expirydate","streetaddress","city","province","postal","homephone","workphone","cellphone","email","occupation","famphysician","contacted","hearofus","heartattack","heartattackDate","heartdisease","heartdiseaseDate","chestpain","chestpainDate","stroke","strokeDate","bloodclots","bloodclotsDate","bleeding","bleedingDate","bloodpressure","bloodpressureDate","kidneydisease","kidneydiseaseDate","openingmouth","openingmouthDate","diabetes","diabetesDate","arthritis","arthritisDate","asthma","asthmaDate","seizures","seizuresDate","thyroid","thyroidDate","liversisease","liversiseaseDate","hiv","hivDate","despression","depressionDate","sleepApnea","sleepApneaOther","doSmoke","smokeNumn","didSmoke","smokeQuit","height","weight","pregnancy","prevSurg1","prevSurg2","prevSurg3","prevSurg4","allergicMed","whichMed","allergicFood","whichFood","allergicLatex","allergicIodine","hyperthermia","anesthetic","anestheticDescribe","medication1","medication2","medication3","medication4","medication5","medication6","promotions","skinCare","comments","PersonalInfo","props","Grid","item","xs","sm","disabled","fullWidth","label","onChange","onInputChange","placeholder","value","validators","errorMessages","inputProps","style","fontSize","InputLabelProps","state","MedicalHistory","FormControl","component","container","FormControlLabel","control","Checkbox","checked","color","onCheck","labelPlacement","depression","RadioGroup","row","aria-label","defaultValue","Radio","length","firstSubmit","MedicalHistory2","Allergies","lg","Medications","console","log","Comments","multiline","rows","rowsMax","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","Registration","useState","setFirstSubmit","done","setDone","State","setState","result","setResult","trimmedSignature","setTrimmedSignature","classes","sigPad","event","target","Container","onSubmit","preventDefault","axios","post","headers","then","response","data","catch","success","message","e","prevState","direction","justify","alignItems","penColor","canvasProps","ref","Button","marginTop","marginBottom","border","onClick","clear","backgroundColor","fontWeight","variant","type","getTrimmedCanvas","toDataURL","cough","fever","throat","headache","nose","sneeze","smellTaste","breath","aches","fatigue","lesions","diarrhea","day14Travel","closeContact","clusterHub","covidRisk","tested","dateOfSwab","other","verifiedBy","updateBy","Risk","Paragraph","Section1","fontStyle","Section2","Covid","custerHub","Section3","TabPanel","children","index","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","background","width","Forms","useTheme","React","setValue","AppBar","position","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","Footer","App","Boolean","window","location","hostname","match","defaults","baseURL","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.5f09615c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Logo from \"../../assets/landings-logo.svg\";\r\nimport \"./styles.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"background\">\r\n      <img src={Logo} alt=\"landings logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const NewDate = () => {\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  var dateObj = new Date();\r\n  var month = monthNames[dateObj.getMonth()];\r\n  var day = dateObj.getDate();\r\n  var year = dateObj.getFullYear();\r\n\r\n  const newdate = month + \" \" + day + \", \" + year;\r\n\r\n  return newdate;\r\n};\r\n\r\nexport default NewDate;\r\n","import NewDate from \"../../utils/NewDate\";\r\n\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  dob: \"\",\r\n  age: \"\",\r\n  healthcard: \"\",\r\n  effectivedate: \"\",\r\n  expirydate: \"\",\r\n  streetaddress: \"\",\r\n  city: \"\",\r\n  province: \"\",\r\n  postal: \"\",\r\n  homephone: \"\",\r\n  workphone: \"\",\r\n  cellphone: \"\",\r\n  email: \"\",\r\n  occupation: \"\",\r\n  famphysician: \"\",\r\n  contacted: \"\",\r\n  hearofus: \"\",\r\n  heartattack: false,\r\n  heartattackDate: \"\",\r\n  heartdisease: false,\r\n  heartdiseaseDate: \"\",\r\n  chestpain: false,\r\n  chestpainDate: \"\",\r\n  stroke: false,\r\n  strokeDate: \"\",\r\n  bloodclots: false,\r\n  bloodclotsDate: \"\",\r\n  bleeding: false,\r\n  bleedingDate: \"\",\r\n  bloodpressure: false,\r\n  bloodpressureDate: \"\",\r\n  kidneydisease: false,\r\n  kidneydiseaseDate: \"\",\r\n  openingmouth: false,\r\n  openingmouthDate: \"\",\r\n  diabetes: false,\r\n  diabetesDate: \"\",\r\n  arthritis: false,\r\n  arthritisDate: \"\",\r\n  asthma: false,\r\n  asthmaDate: \"\",\r\n  seizures: false,\r\n  seizuresDate: \"\",\r\n  thyroid: false,\r\n  thyroidDate: \"\",\r\n  liversisease: false,\r\n  liversiseaseDate: \"\",\r\n  hiv: false,\r\n  hivDate: \"\",\r\n  despression: false,\r\n  depressionDate: \"\",\r\n  sleepApnea: \"\",\r\n  sleepApneaOther: \"\",\r\n  doSmoke: \"\",\r\n  smokeNumn: \"\",\r\n  didSmoke: \"\",\r\n  smokeQuit: \"\",\r\n  height: \"\",\r\n  weight: \"\",\r\n  pregnancy: \"\",\r\n  prevSurg1: \"\",\r\n  prevSurg2: \"\",\r\n  prevSurg3: \"\",\r\n  prevSurg4: \"\",\r\n  allergicMed: \"\",\r\n  whichMed: \"\",\r\n  allergicFood: \"\",\r\n  whichFood: \"\",\r\n  allergicLatex: \"\",\r\n  allergicIodine: \"\",\r\n  hyperthermia: \"\",\r\n  anesthetic: \"\",\r\n  anestheticDescribe: \"\",\r\n  medication1: \"\",\r\n  medication2: \"\",\r\n  medication3: \"\",\r\n  medication4: \"\",\r\n  medication5: \"\",\r\n  medication6: \"\",\r\n  promotions: \"\",\r\n  skinCare: \"\",\r\n  comments: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst PersonalInfo = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>Personal Info</h1>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          disabled\r\n          fullWidth\r\n          label=\"Date\"\r\n          onChange={props.onInputChange}\r\n          placeholder={NewDate()}\r\n          name=\"date\"\r\n          value={NewDate()}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Name is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Date of Birth (YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"dob\"\r\n          placeholder=\"YYYY/MM/DD\"\r\n          value={props.state.dob}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"Date of birth is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Age\"\r\n          onChange={props.onInputChange}\r\n          name=\"age\"\r\n          value={props.state.age}\r\n          validators={[\"isNumber\", \"minStringLength:2\", \"maxStringLength:2\"]}\r\n          errorMessages={[\r\n            \"Must be a number.\",\r\n            \"Age is not valid\",\r\n            \"Age is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Provincial Health #\"\r\n          onChange={props.onInputChange}\r\n          name=\"healthcard\"\r\n          value={props.state.healthcard}\r\n          validators={[\"minStringLength:8\", \"maxStringLength:12\"]}\r\n          errorMessages={[\"Number is not valid\", \"Number is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Effective Date (YYYY/MM/DD)\"\r\n          placeholder=\"(YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"effectivedate\"\r\n          value={props.state.effectivedate}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\"Date is not valid\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Expiry Date (YYYY/MM/DD)\"\r\n          placeholder=\"(YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"expirydate\"\r\n          value={props.state.expirydate}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\"Date is not valid\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Street Address\"\r\n          onChange={props.onInputChange}\r\n          name=\"streetaddress\"\r\n          value={props.state.streetaddress}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"Enter your address\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"City\"\r\n          onChange={props.onInputChange}\r\n          name=\"city\"\r\n          value={props.state.city}\r\n          validators={[\"minStringLength:4\", \"maxStringLength:30\"]}\r\n          errorMessages={[\"Enter your city\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Province\"\r\n          onChange={props.onInputChange}\r\n          name=\"province\"\r\n          value={props.state.province}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your province\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Postal Code\"\r\n          onChange={props.onInputChange}\r\n          name=\"postal\"\r\n          value={props.state.postal}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:9\"]}\r\n          errorMessages={[\"Enter your postal code\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Home Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"homephone\"\r\n          value={props.state.homephone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\r\n            \"Enter your home phone number with area code\",\r\n            \"Too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Work Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"workphone\"\r\n          value={props.state.workphone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\r\n            \"Enter your work phone number with area code\",\r\n            \"Too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Cell Phone (include area code)\"\r\n          onChange={props.onInputChange}\r\n          name=\"cellphone\"\r\n          value={props.state.cellphone}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:16\"]}\r\n          errorMessages={[\"Enter a valid phone number\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Email\"\r\n          onChange={props.onInputChange}\r\n          name=\"email\"\r\n          value={props.state.email}\r\n          validators={[\r\n            \"required\",\r\n            \"isEmail\",\r\n            \"minStringLength:9\",\r\n            \"maxStringLength:40\",\r\n          ]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"email is not valid\",\r\n            \"email is not valid\",\r\n            \"email is too long\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Occupation\"\r\n          onChange={props.onInputChange}\r\n          name=\"occupation\"\r\n          value={props.state.occupation}\r\n          validators={[\"minStringLength:5\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your occupation\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Family Physician\"\r\n          onChange={props.onInputChange}\r\n          name=\"famphysician\"\r\n          value={props.state.famphysician}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"Enter your Family Physician\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"How would you like to be contacted?\"\r\n          onChange={props.onInputChange}\r\n          name=\"contacted\"\r\n          value={props.state.contacted}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"How would you like to be contacted?\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"How did you hear of us?\"\r\n          onChange={props.onInputChange}\r\n          name=\"hearofus\"\r\n          value={props.state.hearofus}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"How did you hear of us?\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst MedicalHistory = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h1>Medical History</h1>\r\n        <h2>Have you ever had any of the following?</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.heartattack}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.heartattack}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"heartattack\"\r\n                  />\r\n                }\r\n                label=\"Heart Attack\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"heartattackDate\"\r\n                value={props.state.heartattackDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.heartdisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.heartdisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"heartdisease\"\r\n                  />\r\n                }\r\n                label=\"Heart Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"heartdiseaseDate\"\r\n                value={props.state.heartdiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.chestpain}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.chestpain}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"chestpain\"\r\n                  />\r\n                }\r\n                label=\"Chest Pain\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"chestpainDate\"\r\n                value={props.state.chestpainDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.stroke}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.stroke}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"stroke\"\r\n                  />\r\n                }\r\n                label=\"Stroke\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"strokeDate\"\r\n                value={props.state.strokeDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bloodclots}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bloodclots}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bloodclots\"\r\n                  />\r\n                }\r\n                label=\"Blood Clots\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bloodclotsDate\"\r\n                value={props.state.bloodclotsDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bleeding}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bleeding}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bleeding\"\r\n                  />\r\n                }\r\n                label=\"Prolonged Bleeding\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bleedingDate\"\r\n                value={props.state.bleedingDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.bloodpressure}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.bloodpressure}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"bloodpressure\"\r\n                  />\r\n                }\r\n                label=\"High Blood Pressure\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"bloodpressureDate\"\r\n                value={props.state.bloodpressureDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.kidneydisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.kidneydisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"kidneydisease\"\r\n                  />\r\n                }\r\n                label=\"Kideny Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"kidneydiseaseDate\"\r\n                value={props.state.kidneydiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.openingmouth}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.openingmouth}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"openingmouth\"\r\n                  />\r\n                }\r\n                label=\"Trouble Opening Mouth\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"openingmouthDate\"\r\n                value={props.state.openingmouthDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.diabetes}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.diabetes}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"diabetes\"\r\n                  />\r\n                }\r\n                label=\"Diabetes\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"diabetesDate\"\r\n                value={props.state.diabetesDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.arthritis}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.arthritis}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"arthritis\"\r\n                  />\r\n                }\r\n                label=\"Arthritis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"arthritisDate\"\r\n                value={props.state.arthritisDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.asthma}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.asthma}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"asthma\"\r\n                  />\r\n                }\r\n                label=\"Asthma/Bronchitis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"asthmaDate\"\r\n                value={props.state.asthmaDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.seizures}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.seizures}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"seizures\"\r\n                  />\r\n                }\r\n                label=\"Seizures\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"seizuresDate\"\r\n                value={props.state.seizuresDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.thyroid}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.thyroid}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"thyroid\"\r\n                  />\r\n                }\r\n                label=\"Thyroid Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"thyroidDate\"\r\n                value={props.state.thyroidDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.liversisease}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.liversisease}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"liversisease\"\r\n                  />\r\n                }\r\n                label=\"Liver Disease\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"liversiseaseDate\"\r\n                value={props.state.liversiseaseDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.hiv}\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    checked={props.state.hiv}\r\n                    onChange={props.onCheck}\r\n                    name=\"hiv\"\r\n                  />\r\n                }\r\n                label=\"HIV/Hepatitis\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"hivDate\"\r\n                value={props.state.hivDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={5} sm={5} className=\"checkBoxes\">\r\n              <FormControlLabel\r\n                value={props.state.depression}\r\n                control={\r\n                  <Checkbox\r\n                    checked={props.state.depression}\r\n                    color=\"primary\"\r\n                    onChange={props.onCheck}\r\n                    name=\"depression\"\r\n                  />\r\n                }\r\n                label=\"Depression\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} sm={7}>\r\n              <TextValidator\r\n                fullWidth\r\n                label=\"Date\"\r\n                onChange={props.onInputChange}\r\n                name=\"depressionDate\"\r\n                value={props.state.depressionDate}\r\n                validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n                errorMessages={[\"This field is required\", \"Too long\"]}\r\n                inputProps={{ style: { fontSize: fontSize } }}\r\n                InputLabelProps={{ style: { fontSize: fontSize } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Do you have, or have you ever been tested for Sleep Apnea?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"sleepApnea\"\r\n              value={props.state.sleepApnea}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.sleepApnea.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Other (Please List):\"\r\n          onChange={props.onInputChange}\r\n          name=\"sleepApneaOther\"\r\n          value={props.state.sleepApneaOther}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} container>\r\n        <Grid>\r\n          <h3>Do you smoke?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"doSmoke\"\r\n              value={props.state.doSmoke}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.doSmoke.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If yes, how many per day?\"\r\n          onChange={props.onInputChange}\r\n          name=\"smokeNumn\"\r\n          value={props.state.smokeNumn}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} container>\r\n        <Grid>\r\n          <h3>Did you smoke?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"didSmoke\"\r\n              value={props.state.didSmoke}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.didSmoke.length < 1 &&\r\n          props.firstSubmit === true &&\r\n          props.state.didSmoke === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If you quit, when?\"\r\n          onChange={props.onInputChange}\r\n          name=\"smokeQuit\"\r\n          value={props.state.smokeQuit}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst MedicalHistory2 = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What is your height?\"\r\n          onChange={props.onInputChange}\r\n          name=\"height\"\r\n          value={props.state.height}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"What is your current weight?\"\r\n          onChange={props.onInputChange}\r\n          name=\"weight\"\r\n          value={props.state.weight}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:20\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Possibility of pregnancy?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"pregnancy\"\r\n              value={props.state.pregnancy}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.pregnancy.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <h3>Please list any previous surgeries.</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg1\"\r\n          value={props.state.prevSurg1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg2\"\r\n          value={props.state.prevSurg2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg3\"\r\n          value={props.state.prevSurg3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"4.\"\r\n          onChange={props.onInputChange}\r\n          name=\"prevSurg4\"\r\n          value={props.state.prevSurg4}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:60\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicalHistory2;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Allergies = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>ALLERGIES:</h2>\r\n        <h3>Are you allergic to any of the follwing?</h3>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Medications</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicMed\"\r\n                value={props.state.allergicMed}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicMed.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Which Medications?\"\r\n          onChange={props.onInputChange}\r\n          name=\"whichMed\"\r\n          value={props.state.whichMed}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Food</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicFood\"\r\n                value={props.state.allergicFood}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicFood.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Which Foods?\"\r\n          onChange={props.onInputChange}\r\n          name=\"whichFood\"\r\n          value={props.state.whichFood}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Latex</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicLatex\"\r\n                value={props.state.allergicLatex}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicLatex.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={2}>\r\n          <h3>Iodine</h3>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} lg={10}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"allergicIodine\"\r\n                value={props.state.allergicIodine}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Unsure\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Unsure\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            {props.state.allergicIodine.length < 1 &&\r\n            props.firstSubmit === true ? (\r\n              <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>\r\n            Do you or your relatives have a history of malignant hyperthermia?\r\n          </h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"hyperthermia\"\r\n              value={props.state.hyperthermia}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.hyperthermia.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>Have you or your relatives had problems with anesthetic?</h3>\r\n        </Grid>\r\n        <Grid className=\"yesno\">\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"anesthetic\"\r\n              value={props.state.anesthetic}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.anesthetic.length < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"If yes, please describe.\"\r\n          onChange={props.onInputChange}\r\n          name=\"anestheticDescribe\"\r\n          value={props.state.anestheticDescribe}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:50\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Allergies;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Medications = (props) => {\r\n  const fontSize = 19;\r\n  console.log(props.firstSubmit, \"INSIDE COMPONDENT\");\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>MEDICATIONS:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid>\r\n          <h3>\r\n            Please list all medications that you take along with the dosage.\r\n            Include prescriptions and non-prescription medications, vitamins,\r\n            inhalers, naturopathic or over the counter medications.\r\n          </h3>\r\n        </Grid>\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"1.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication1\"\r\n          value={props.state.medication1}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"2.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication2\"\r\n          value={props.state.medication2}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"3.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication3\"\r\n          value={props.state.medication3}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"4.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication4\"\r\n          value={props.state.medication4}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"5.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication5\"\r\n          value={props.state.medication5}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"6.\"\r\n          onChange={props.onInputChange}\r\n          name=\"medication6\"\r\n          value={props.state.medication6}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid item xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Periodically we run specials on Botox and Dermal Filler injections.\r\n            Would you like to be contacted by email regarding these promotions?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"promotions\"\r\n                defaultValue=\"top\"\r\n                value={props.state.promotions}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.promotions.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={12} container>\r\n        <Grid xs={12} sm={12} lg={7}>\r\n          <h3>\r\n            Would you like to be contacted by our Clinical Skin Care Therarpist\r\n            regarding assistance with your skin care?\r\n          </h3>\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={12} lg={3}>\r\n          <Grid className=\"yesno\">\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                name=\"skinCare\"\r\n                defaultValue=\"top\"\r\n                value={props.state.skinCare}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Yes\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Yes\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"No\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        {props.state.skinCare.length < 1 && props.firstSubmit === true ? (\r\n          <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Medications;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nconst Comments = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={12}>\r\n        <h2>COMMENTS:</h2>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} container>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Additional comments here..\"\r\n          onChange={props.onInputChange}\r\n          name=\"comments\"\r\n          value={props.state.comments}\r\n          validators={[\"minStringLength:0\", \"maxStringLength:500\"]}\r\n          errorMessages={[\"This field is required\", \"Too long\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n          multiline\r\n          rows={4}\r\n          rowsMax={10}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useState } from \"react\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { Button, Grid, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport State from \"./state.js\";\r\nimport PersonalInfo from \"./components/PersonalInfo\";\r\nimport MedicalHistory from \"./components/MedicalHistory\";\r\nimport MedicalHistory2 from \"./components/MedicalHistory2\";\r\nimport Allergies from \"./components/Allergies\";\r\nimport Medications from \"./components/Medications\";\r\nimport Comments from \"./components/Comments\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Registration = () => {\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [state, setState] = useState(State);\r\n  const [result, setResult] = useState(null);\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const classes = useStyles();\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const firstSubmitCheck = () => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      state.name.length > 2 &&\r\n      state.name.length < 40 &&\r\n      state.dob.length === 10 &&\r\n      state.age.length === 2 &&\r\n      state.healthcard.length > 8 &&\r\n      state.healthcard.length < 12 &&\r\n      state.effectivedate.length === 10 &&\r\n      state.expirydate.length === 10 &&\r\n      state.streetaddress.length > 5 &&\r\n      state.streetaddress.length < 50 &&\r\n      state.city.length > 4 &&\r\n      state.city.length < 50 &&\r\n      state.province.length > 2 &&\r\n      state.province.length < 40 &&\r\n      state.postal.length > 5 &&\r\n      state.postal.length < 9 &&\r\n      state.homephone.length < 16 &&\r\n      state.workphone.length < 16 &&\r\n      state.cellphone.length < 16 &&\r\n      state.email.length > 9 &&\r\n      state.email.length < 40 &&\r\n      state.occupation.length > 5 &&\r\n      state.occupation.length < 40 &&\r\n      state.famphysician.length < 40 &&\r\n      state.contacted.length < 40 &&\r\n      state.hearofus.length < 40 &&\r\n      state.sleepApnea !== \"\" &&\r\n      state.doSmoke !== \"\" &&\r\n      state.pregnancy !== \"\" &&\r\n      state.allergicMed !== \"\" &&\r\n      state.allergicFood !== \"\" &&\r\n      state.allergicLatex !== \"\" &&\r\n      state.allergicIodine !== \"\" &&\r\n      state.hyperthermia !== \"\" &&\r\n      state.anesthetic !== \"\" &&\r\n      state.promotions !== \"\" &&\r\n      state.skinCare !== \"\"\r\n    ) {\r\n      setDone(true);\r\n      axios\r\n        .post(\r\n          \"/registration\",\r\n          {\r\n            ...state,\r\n            trimmedSignature,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(State);\r\n          setDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {done ? (\r\n          <p>Thank you.</p>\r\n        ) : (\r\n          <div className={classes.root}>\r\n            {/* <form onSubmit={sendEmail}> */}\r\n            <ValidatorForm onSubmit={sendEmail}>\r\n              <Grid container spacing={6}>\r\n                <Grid item xs={12}>\r\n                  {result && (\r\n                    <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                      {result.message}\r\n                    </p>\r\n                  )}\r\n                  <h1 className=\"registration\">Pre-Screening Data</h1>\r\n                </Grid>\r\n                <PersonalInfo onInputChange={onInputChange} state={state} />\r\n\r\n                <MedicalHistory\r\n                  onCheck={onCheck}\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <MedicalHistory2\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n\r\n                <Allergies\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Medications\r\n                  onInputChange={onInputChange}\r\n                  state={state}\r\n                  firstSubmit={firstSubmit}\r\n                />\r\n                <Comments onInputChange={onInputChange} state={state} />\r\n\r\n                <Grid item xs={12}>\r\n                  <hr />\r\n                  <h3>\r\n                    Add your signature in the box below. Please use your mouse,\r\n                    or finger if you have a touch screen.\r\n                  </h3>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <SignatureCanvas\r\n                    penColor=\"black\"\r\n                    canvasProps={{\r\n                      className: \"sigCanvas\",\r\n                    }}\r\n                    ref={(ref) => {\r\n                      sigPad = ref;\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        padding: \"20px 30px\",\r\n                        marginTop: 50,\r\n                        marginBottom: 30,\r\n                        border: \"1px solid black\",\r\n                      }}\r\n                      onClick={clear}\r\n                    >\r\n                      Clear Signature\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <div\r\n                    style={{\r\n                      backgroundColor: \"#6C0D0D\",\r\n                      padding: \"14px 14px\",\r\n                      marginBottom: \"100px\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        fontSize: \"20px\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                        padding: \"14px 40px\",\r\n                        backgroundColor: \"#6C0D0D\",\r\n                      }}\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        firstSubmitCheck();\r\n                        trim();\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n              {/* </form> */}\r\n            </ValidatorForm>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import NewDate from \"../../utils/NewDate\";\r\nexport default {\r\n  date: NewDate(),\r\n  name: \"\",\r\n  dob: \"\",\r\n  cough: false,\r\n  fever: false,\r\n  throat: false,\r\n  headache: false,\r\n  nose: false,\r\n  sneeze: false,\r\n  smellTaste: false,\r\n  breath: false,\r\n  aches: false,\r\n  fatigue: false,\r\n  lesions: false,\r\n  diarrhea: false,\r\n  day14Travel: \"\",\r\n  closeContact: \"\",\r\n  clusterHub: \"\",\r\n  covidRisk: \"\",\r\n  tested: \"\",\r\n  dateOfSwab: \"\",\r\n  other: \"\",\r\n  verifiedBy: \"\",\r\n  updateBy: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\nimport NewDate from \"../../../utils/NewDate\";\r\nconst Risk = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          disabled\r\n          fullWidth\r\n          label=\"Date\"\r\n          onChange={props.onInputChange}\r\n          placeholder={NewDate()}\r\n          name=\"date\"\r\n          value={NewDate()}\r\n          validators={[\"minStringLength:2\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Patient Full Name\"\r\n          onChange={props.onInputChange}\r\n          name=\"name\"\r\n          value={props.state.name}\r\n          validators={[\"minStringLength:4\", \"maxStringLength:40\"]}\r\n          errorMessages={[\"This field is required\", \"Date is not valid\"]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <TextValidator\r\n          fullWidth\r\n          label=\"Date of Birth (YYYY/MM/DD)\"\r\n          onChange={props.onInputChange}\r\n          name=\"dob\"\r\n          placeholder=\"YYYY/MM/DD\"\r\n          value={props.state.dob}\r\n          validators={[\"minStringLength:10\", \"maxStringLength:10\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"Date of birth is not valid\",\r\n          ]}\r\n          inputProps={{ style: { fontSize: fontSize } }}\r\n          InputLabelProps={{ style: { fontSize: fontSize } }}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Risk;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Paragraph = () => {\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <p>\r\n        The following risk assessment must be completed for every patient who\r\n        recieves face to face services or is admitted.\r\n      </p>\r\n      <p>\r\n        The COVID-19 Risk Assessment should be placed in front of the patient's\r\n        chart when completed or placed in a location and communicated to team\r\n        members who are caring for the patient. The Risk Assessment is used to\r\n        facilitate patient, staff and physician safety.\r\n      </p>\r\n      <h3>\r\n        It is the responsibility of the Most Responsible Provider to ensure that\r\n        the assessment is completed and signed at the time of healthcare\r\n        interaction or admission\r\n      </h3>\r\n      <h2>\r\n        PATIENT RISK COVID-19 IDENTIFICATION: (Completed by any healthcare\r\n        worker)\r\n      </h2>\r\n      <h3 style={{ marginBottom: 0 }}>\r\n        If the patient meets any of the boxes below, have the patients\r\n        wash/sanitize their hands and put on a surgical mask.\r\n      </h3>\r\n    </Grid>\r\n  );\r\n};\r\nexport default Paragraph;\r\n","import React from \"react\";\r\nimport { Grid, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\nconst Section1 = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        <p style={{ marginBottom: 40, fontStyle: \"italic\", fontSize: 22 }}>\r\n          Do you currently have two of the following symptoms:\r\n        </p>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.cough}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.cough}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"cough\"\r\n              />\r\n            }\r\n            label=\"New or worsening cough\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.fever}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.fever}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"fever\"\r\n              />\r\n            }\r\n            label=\"Fever greater than 38 C (i.e. chills, sweats)\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.throat}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.throat}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"throat\"\r\n              />\r\n            }\r\n            label=\"Sore or hoarse throat\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.headache}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.headache}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"headache\"\r\n              />\r\n            }\r\n            label=\"Headache\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.nose}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.nose}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"nose\"\r\n              />\r\n            }\r\n            label=\"Nasal congestion/runny nose\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.sneeze}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.sneeze}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"sneeze\"\r\n              />\r\n            }\r\n            label=\"Sneezing\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.smellTaste}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.smellTaste}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"smellTaste\"\r\n              />\r\n            }\r\n            label=\"Loss of sense of smell or taste\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.breath}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.breath}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"breath\"\r\n              />\r\n            }\r\n            label=\"New or worsening shortness of breath\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.aches}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.aches}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"aches\"\r\n              />\r\n            }\r\n            label=\"Muscle aches\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.fatigue}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.fatigue}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"fatigue\"\r\n              />\r\n            }\r\n            label=\"Unusual fatigue\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.lesions}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.lesions}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"lesions\"\r\n              />\r\n            }\r\n            label=\"Red, purple, bluish lesions on the feet, toes or fingers without clear cause\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} className=\"checkBoxes\">\r\n          <FormControlLabel\r\n            value={props.state.diarrhea}\r\n            control={\r\n              <Checkbox\r\n                checked={props.state.diarrhea}\r\n                color=\"primary\"\r\n                onChange={props.onCheck}\r\n                name=\"diarrhea\"\r\n              />\r\n            }\r\n            label=\"Diarrhea\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section1;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\n\r\nconst Section2 = (props) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 40, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you travelled outside of Maritime Canada in the last 14 days\r\n            (outside of NB, NS, PEI):\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"day14Travel\"\r\n              value={props.state.day14Travel}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Yes\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.day14Travel < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select \"yes\" or \"no\".</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 60, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you had close contact with Covid-19:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"closeContact\"\r\n              value={props.state.closeContact}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Known case\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Known case\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Suspected cases\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Suspected case\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"No known cases\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"No known COVID-19 contacts\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.closeContact < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <p style={{ marginTop: 60, fontStyle: \"italic\", fontSize: 22 }}>\r\n            Do you live within a known cluster as identified on the COVID-19\r\n            Hub:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"clusterHub\"\r\n              value={props.state.clusterHub}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Community Cluster\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Community cluster\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"Facility Cluster\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Facility cluster\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Does not live in a cluster\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.clusterHub < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst Section2 = (props) => {\r\n  const fontSize = 19;\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <h3>\r\n            Most Responsible Provider must verify the above (or complete if not\r\n            one by another team member) and complete the boxes below.\r\n          </h3>\r\n          <h3>PATIENT RISK COVID-19 ASSESSMENT:</h3>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"covidRisk\"\r\n              value={props.state.covidRisk}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Yes\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"IDENTIFIED COVID-19 RISK\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"No\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"NO IDENTIFIED OVID-19 RISK\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.covidRisk < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <h3 style={{ marginTop: 70 }}>COVID-19 SWAB HISTORY:</h3>\r\n          <p style={{ fontStyle: \"italic\", fontSize: 22 }}>\r\n            Have you been tested for COVID-19:\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"position\"\r\n              defaultValue=\"top\"\r\n              name=\"tested\"\r\n              value={props.state.tested}\r\n              onChange={props.onInputChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"Not indicated\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Not indicated\"\r\n              />\r\n\r\n              <FormControlLabel\r\n                value=\"Done\"\r\n                control={<Radio color=\"primary\" />}\r\n                label=\"Done\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          {props.state.tested < 1 && props.firstSubmit === true ? (\r\n            <p className=\"error\">Please select above.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Grid>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={12} sm={12} lg={4}>\r\n            <TextValidator\r\n              fullWidth\r\n              label=\"Date of Swab\"\r\n              onChange={props.onInputChange}\r\n              name=\"dateOfSwab\"\r\n              value={props.state.dateOfSwab}\r\n              inputProps={{ style: { fontSize: fontSize } }}\r\n              InputLabelProps={{ style: { fontSize: fontSize } }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} lg={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                row\r\n                aria-label=\"position\"\r\n                defaultValue=\"top\"\r\n                name=\"other\"\r\n                value={props.state.other}\r\n                onChange={props.onInputChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"POS\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"POS\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                  value=\"NEG\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"NEG\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Pending\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Pending\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Section2;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Container, Button } from \"@material-ui/core\";\r\nimport { ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport axios from \"axios\";\r\nimport State from \"./state.js\";\r\nimport Risk from \"./components/Risk\";\r\nimport Paragraph from \"./components/Paragrapgh\";\r\nimport Section1 from \"./components/Section1\";\r\nimport Section2 from \"./components/Section2\";\r\nimport Section3 from \"./components/Section3\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Covid = () => {\r\n  const [state, setState] = useState(State);\r\n  const [done, setDone] = useState(false);\r\n  const [firstSubmit, setFirstSubmit] = useState(false);\r\n  const classes = useStyles();\r\n  const [trimmedSignature, setTrimmedSignature] = useState({});\r\n  const [trimmedSignature2, setTrimmedSignature2] = useState({});\r\n  const [result, setResult] = useState(null);\r\n\r\n  let sigPad = {};\r\n\r\n  const clear = () => {\r\n    sigPad.clear();\r\n    setTrimmedSignature({});\r\n  };\r\n\r\n  const trim = () => {\r\n    setTrimmedSignature(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\r\n  };\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n    console.log(\"name: \", name, \"value: \", value);\r\n  };\r\n\r\n  const onCheck = (e) => {\r\n    const { name } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: !prevState[name] }));\r\n  };\r\n\r\n  const firstSubmitCheck = (e) => {\r\n    setFirstSubmit(true);\r\n  };\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      state.name.length > 2 &&\r\n      state.name.length < 40 &&\r\n      state.dob.length === 10 &&\r\n      state.day14Travel !== \"\" &&\r\n      state.closeContact !== \"\" &&\r\n      state.custerHub !== \"\" &&\r\n      state.covidRisk !== \"\" &&\r\n      state.tested !== \"\"\r\n    ) {\r\n      setDone(true);\r\n      axios\r\n        .post(\"/covid\", { ...state })\r\n        .then((response) => {\r\n          setResult(response.data);\r\n          setState(State);\r\n          setDone(true);\r\n        })\r\n        .catch(() => {\r\n          setResult({\r\n            success: false,\r\n            message: \"Something went wrong. Try again later\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {done ? (\r\n        <p>Thank you</p>\r\n      ) : (\r\n        <div className={classes.root}>\r\n          <Grid item xs={12}>\r\n            <h1 className=\"registration title\">COVID-19 Risk Assessment</h1>\r\n          </Grid>\r\n          <ValidatorForm onSubmit={sendEmail}>\r\n            <Grid container spacing={6}>\r\n              <Grid item xs={12}>\r\n                {result && (\r\n                  <p className={`${result.success ? \"success\" : \"error\"}`}>\r\n                    {result.message}\r\n                  </p>\r\n                )}\r\n              </Grid>\r\n              <Risk onInputChange={onInputChange} state={state} />\r\n              <Paragraph />\r\n              <Section1\r\n                onInputChange={onInputChange}\r\n                onCheck={onCheck}\r\n                state={state}\r\n              />\r\n              <Section2\r\n                onInputChange={onInputChange}\r\n                state={state}\r\n                firstSubmit={firstSubmit}\r\n              />\r\n              <Section3\r\n                onInputChange={onInputChange}\r\n                state={state}\r\n                firstSubmit={firstSubmit}\r\n              />\r\n\r\n              <Grid item xs={12}>\r\n                <h3>\r\n                  Add your signature in the box below. Please use your mouse, or\r\n                  finger if you have a touch screen.\r\n                </h3>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <SignatureCanvas\r\n                  penColor=\"black\"\r\n                  canvasProps={{\r\n                    className: \"sigCanvas\",\r\n                  }}\r\n                  ref={(ref) => {\r\n                    sigPad = ref;\r\n                  }}\r\n                />\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      padding: \"20px 30px\",\r\n                      marginTop: 50,\r\n                      marginBottom: 30,\r\n                      border: \"1px solid black\",\r\n                    }}\r\n                    onClick={clear}\r\n                  >\r\n                    Clear Signature\r\n                  </Button>\r\n                </Grid>\r\n\r\n                {/* {trimmedSignature ? <img src={trimmedSignature} /> : null} */}\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"#6C0D0D\",\r\n                    padding: \"14px 14px\",\r\n                    marginBottom: \"100px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      fontSize: \"20px\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      border: \".5px solid hsla(0,0%,100%,.5)\",\r\n                      padding: \"14px 40px\",\r\n                      backgroundColor: \"#6C0D0D\",\r\n                    }}\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      firstSubmitCheck();\r\n                      trim();\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </ValidatorForm>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import React from \"react\";\r\nimport Registration from \"./registration\";\r\nimport Covid from \"./covid\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst Forms = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Container>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n            centered\r\n          >\r\n            <Tab label=\"Covid Assessment\" {...a11yProps(0)} />\r\n            <Tab label=\"Registration\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </Container>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <Covid />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <Registration />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"footer\"\r\n    >\r\n      <p className=\"footerp\">©2007 - 2020 The Landings Surgical Centre </p>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./components/header/Header\";\r\nimport Forms from \"./forms/index\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport \"./app.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n      <Forms />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_ADDRESS;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/landings-logo.5ed104df.svg\";"],"sourceRoot":""}